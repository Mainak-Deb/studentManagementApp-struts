package com.student.DAO;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;


public class AuthDAO {
	private String jdbcURL;
    private String jdbcUsername;
    private String jdbcPassword;
    private Connection jdbcConnection;

    public AuthDAO() {
        this.jdbcURL = "jdbc:mysql://localhost:3306/student_master";
        this.jdbcUsername = "root";
        this.jdbcPassword = "root";
    }

    // Establishes a database connection
    protected void connect() throws SQLException {
        if (jdbcConnection == null || jdbcConnection.isClosed()) {
            try {
                Class.forName("com.mysql.jdbc.Driver");
            } catch (ClassNotFoundException e) {
                throw new SQLException(e);
            }
            jdbcConnection = DriverManager.getConnection(jdbcURL, jdbcUsername, jdbcPassword);
        }
    }

    // Closes the database connection
    protected void disconnect() throws SQLException {
        if (jdbcConnection != null && !jdbcConnection.isClosed()) {
            jdbcConnection.close();
        }
    }

    // Inserts a new student record into the database
    public boolean insertAuth(String username, String password) throws SQLException {
        String sql = "insert into student_table(username,password) 	values ( ? , ?)";
        connect();

        PreparedStatement statement = jdbcConnection.prepareStatement(sql);
        
        statement.setString(1, username);
        statement.setString(2,  password );
       
        boolean rowInserted = statement.executeUpdate() > 0;
        statement.close();
        disconnect();
        return rowInserted;
    }
    
    public boolean authenticate(String username, String password) throws SQLException {
        String sql = "SELECT * FROM student_table WHERE username = ?";
        connect();

        PreparedStatement statement = jdbcConnection.prepareStatement(sql);
        
        String real_password=null;
        ResultSet resultSet = statement.executeQuery();
        if (resultSet.next()) {
            real_password = resultSet.getString("password");
        }
        resultSet.close();
        statement.close();
        disconnect();
        
        if(password.equals(real_password)) {
        	return true;
        }else {
        	return false;
        }
    }
    
    public String parseDOB(String date) {
    	System.out.println(date);
    	String d ="28052001";
    	return d;
    }
}
