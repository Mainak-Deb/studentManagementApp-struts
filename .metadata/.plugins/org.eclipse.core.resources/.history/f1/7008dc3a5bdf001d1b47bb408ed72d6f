package com.student.DAO;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;

import com.student.form.CreateUserForm;

public class StudentDAO {

    private String jdbcURL;
    private String jdbcUsername;
    private String jdbcPassword;
    private Connection jdbcConnection;

    public StudentDAO() {
        this.jdbcURL = jdbcURL;
        this.jdbcUsername = jdbcUsername;
        this.jdbcPassword = jdbcPassword;
    }

    // Establishes a database connection
    protected void connect() throws SQLException {
        if (jdbcConnection == null || jdbcConnection.isClosed()) {
            try {
                Class.forName("com.mysql.jdbc.Driver");
            } catch (ClassNotFoundException e) {
                throw new SQLException(e);
            }
            jdbcConnection = DriverManager.getConnection(jdbcURL, jdbcUsername, jdbcPassword);
        }
    }

    // Closes the database connection
    protected void disconnect() throws SQLException {
        if (jdbcConnection != null && !jdbcConnection.isClosed()) {
            jdbcConnection.close();
        }
    }

    // Inserts a new student record into the database
    public boolean insertStudent(CreateUserForm student) throws SQLException {
        String sql = "INSERT INTO students (student_id, full_name, college_name, university_name, date_of_birth, section, department, gender, student_email) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?)";
        connect();

        PreparedStatement statement = jdbcConnection.prepareStatement(sql);
        statement.setInt(1, student.getStudentId());
        statement.setString(2, student.getFullName());
        statement.setString(3, student.getCollegeName());
        statement.setString(4, student.getUniversityName());
        statement.setString(5, student.getDateOfBirth());
        statement.setString(6, student.getSection());
        statement.setString(7, student.getStream());
        statement.setString(8, student.getGender());
        statement.setString(9, student.getStudentEmail());

        boolean rowInserted = statement.executeUpdate() > 0;
        statement.close();
        disconnect();
        return rowInserted;
    }

    // Retrieves a student record from the database using the student ID
    public CreateUserForm getStudent(int studentId) throws SQLException {
    	CreateUserForm student = null;
        String sql = "SELECT * FROM students WHERE student_id = ?";
        connect();

        PreparedStatement statement = jdbcConnection.prepareStatement(sql);
        statement.setInt(1, studentId);

        ResultSet resultSet = statement.executeQuery();
        if (resultSet.next()) {
            String fullName = resultSet.getString("full_name");
            String collegeName = resultSet.getString("college_name");
            String universityName = resultSet.getString("university_name");
            String dateOfBirth = resultSet.getString("date_of_birth");
            String section = resultSet.getString("section");
            String department = resultSet.getString("department");
            String gender = resultSet.getString("gender");
            String studentEmail = resultSet.getString("student_email");
            student = new CreateUserForm (studentId, fullName, collegeName, universityName, dateOfBirth, section, department, gender, studentEmail);
        }
        resultSet.close();
        statement.close();
        disconnect();
        return student;
    }
}